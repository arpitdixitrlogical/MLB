{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./app/js/content/ContentMessageDispatcher.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","instance","Constructor","TypeError","ContentMessageDispatcher","this","_messages","chrome","runtime","onMessage","addListener","message","sender","response","method","then","messageName","handler","Promise","resolve","reject","sendMessage","e","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","undefined","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","self","tryLocsList","context","state","protoGenerator","Generator","generator","Context","_invoke","GenStateSuspendedStart","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","fn","obj","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","error","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply"],"mappings":"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","file":"js/content/sso.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 301);\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","class ContentMessageDispatcher {\n  constructor() {\n    this._messages = {};\n\n    chrome.runtime.onMessage.addListener((message, sender, response) => {\n      if (typeof this._messages[message.method] !== 'undefined') {\n        this._messages[message.method](message, sender, response).then();\n      }\n      return false;\n    });\n  }\n\n  subscribe(messageName, handler) {\n    this._messages[messageName] = handler;\n  }\n\n  async sendMessageToBackgroundPage(message) {\n    return new Promise((resolve, reject) => {\n      try {\n        chrome.runtime.sendMessage(message, (response) => {\n          resolve(response);\n        });\n      }\n      catch (e) {\n        reject();\n      }\n    });\n  }\n}\n\nexport default ContentMessageDispatcher;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;"],"sourceRoot":""}